# -*- coding: utf-8 -*-
"""numpy_regression_assg.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sxgbKaCSQQhMrodJCgBUE2iIJXxIBaGg
"""

import pandas as pd
import numpy as np
import numpy.linalg as la

numpy_data=pd.read_csv("/content/NumpyExerciseData.csv")

data=np.array(numpy_data)

x_data=data[:,:6]
y_data=data[:,6:7]
x_data.shape

X_train_data=x_data[1:41]
Y_train_data=y_data[1:41]
Y_train_data.shape

X_train_data.shape

X_test_data=x_data[42:]
Y_test_data=y_data[42:]
Y_test_data.shape

# W= ((X'X)^-1)*X'y : Use linear algebra for inverse
w_newton=la.inv(X_train_data.T.dot(X_train_data)).dot(X_train_data.T.dot(Y_train_data))
w_newton

Y_train_predict=X_train_data.dot(w_newton)
Y_test_predict=X_test_data.dot(w_newton)

sse_train=((Y_train_predict-Y_train_data)**2).sum()
mse_train=sse_train.mean()
rmse_train=mse_train**0.5
tss_train=((Y_train_data-Y_train_data.mean())**2).sum()
r2_score_train=1-((sse_train/tss_train).sum())
r2_score_train

sse_test=((Y_test_predict-Y_test_data)**2).sum()
mse_test=sse_test.mean()
rmse_test=mse_test**0.5
tss_test=((Y_test_data-Y_test_data.mean())**2).sum()
r2_score_test=1-((sse_test/tss_test).sum())
r2_score_test

# Newton Regularized W: ((X'X+lambda*I)^-1)*X'y
w_newton_regular=la.inv((X_train_data.T.dot(X_train_data))+0.17*np.eye(6)).dot(X_train_data.T.dot(Y_train_data))
w_newton_regular

Y_train_rpredict=X_train_data.dot(w_newton_regular)
Y_test_rpredict=X_test_data.dot(w_newton_regular)

sse_train=((Y_train_rpredict-Y_train_data)**2).sum()
mse_train=sse_train.mean()
rmse_train=mse_train**0.5
tss_train=((Y_train_data-Y_train_data.mean())**2).sum()
r2_score_train=1-((sse_train/tss_train).sum())
r2_score_train

sse_test=((Y_test_rpredict-Y_test_data)**2).sum()
mse_test=sse_test.mean()
rmse_test=mse_test**0.5
tss_test=((Y_test_data-Y_test_data.mean())**2).sum()
r2_score_test=1-((sse_test/tss_test).sum())
r2_score_test

